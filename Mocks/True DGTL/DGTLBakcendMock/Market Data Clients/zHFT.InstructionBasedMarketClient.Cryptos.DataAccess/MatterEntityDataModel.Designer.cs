//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_account_portfolios_portfolios", "model_portfolios", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.model_portfolios), "account_portfolios", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.account_portfolios), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_account_positions_position_status", "position_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.position_status), "account_positions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.account_positions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_portfolio_positions_portfolios", "model_portfolios", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.model_portfolios), "portfolio_positions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.portfolio_positions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_account_portfolios_accounts", "accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts), "account_portfolios", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.account_portfolios), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_account_positions_accounts", "accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts), "account_positions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.account_positions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_accounts_brokers", "brokers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.brokers), "accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_accounts_customers", "customers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.customers), "accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_sessions_users", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.users), "sessions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.sessions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_accounts_bittrex_data_accounts", "accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts), "accounts_bittrex_data", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts_bittrex_data), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_accounts_strategies", "strategies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.strategies), "accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_balance_movements_customers", "customers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.customers), "balance_movements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.balance_movements), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_balance_movements_strategies", "strategies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.strategies), "balance_movements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.balance_movements), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_expositions_customers", "customers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.customers), "expositions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.expositions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_expositions_strategies", "strategies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.strategies), "expositions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.expositions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_accounts_binance_data_accounts", "accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts), "accounts_binance_data", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts_binance_data), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_strategies_closing_prices_strategies", "strategies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.strategies), "strategies_closing_prices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.strategies_closing_prices), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_strategies_hourly_closing_prices_strategies", "strategies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.strategies), "strategies_hourly_closing_prices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.strategies_hourly_closing_prices), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_instructions_account_portfolios", "account_portfolios", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.account_portfolios), "instructions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.instructions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_instructions_account_positions", "account_positions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.account_positions), "instructions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.instructions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_instructions_accounts", "accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.accounts), "instructions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.instructions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_instructions_instruction_types", "instruction_types", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.instruction_types), "instructions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.instructions), true)]
[assembly: EdmRelationshipAttribute("MomentumBackTestsModel", "FK_instructions_instructions", "instructions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.instructions), "instructions1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.InstructionBasedMarketClient.Cryptos.DataAccess.instructions), true)]

#endregion

namespace zHFT.InstructionBasedMarketClient.Cryptos.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AutPortfolioEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AutPortfolioEntities object using the connection string found in the 'AutPortfolioEntities' section of the application configuration file.
        /// </summary>
        public AutPortfolioEntities() : base("name=AutPortfolioEntities", "AutPortfolioEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutPortfolioEntities object.
        /// </summary>
        public AutPortfolioEntities(string connectionString) : base(connectionString, "AutPortfolioEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutPortfolioEntities object.
        /// </summary>
        public AutPortfolioEntities(EntityConnection connection) : base(connection, "AutPortfolioEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account_portfolios> account_portfolios
        {
            get
            {
                if ((_account_portfolios == null))
                {
                    _account_portfolios = base.CreateObjectSet<account_portfolios>("account_portfolios");
                }
                return _account_portfolios;
            }
        }
        private ObjectSet<account_portfolios> _account_portfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account_positions> account_positions
        {
            get
            {
                if ((_account_positions == null))
                {
                    _account_positions = base.CreateObjectSet<account_positions>("account_positions");
                }
                return _account_positions;
            }
        }
        private ObjectSet<account_positions> _account_positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<brokers> brokers
        {
            get
            {
                if ((_brokers == null))
                {
                    _brokers = base.CreateObjectSet<brokers>("brokers");
                }
                return _brokers;
            }
        }
        private ObjectSet<brokers> _brokers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<customers> customers
        {
            get
            {
                if ((_customers == null))
                {
                    _customers = base.CreateObjectSet<customers>("customers");
                }
                return _customers;
            }
        }
        private ObjectSet<customers> _customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<instruction_types> instruction_types
        {
            get
            {
                if ((_instruction_types == null))
                {
                    _instruction_types = base.CreateObjectSet<instruction_types>("instruction_types");
                }
                return _instruction_types;
            }
        }
        private ObjectSet<instruction_types> _instruction_types;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lookups> lookups
        {
            get
            {
                if ((_lookups == null))
                {
                    _lookups = base.CreateObjectSet<lookups>("lookups");
                }
                return _lookups;
            }
        }
        private ObjectSet<lookups> _lookups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<model_portfolios> model_portfolios
        {
            get
            {
                if ((_model_portfolios == null))
                {
                    _model_portfolios = base.CreateObjectSet<model_portfolios>("model_portfolios");
                }
                return _model_portfolios;
            }
        }
        private ObjectSet<model_portfolios> _model_portfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<portfolio_positions> portfolio_positions
        {
            get
            {
                if ((_portfolio_positions == null))
                {
                    _portfolio_positions = base.CreateObjectSet<portfolio_positions>("portfolio_positions");
                }
                return _portfolio_positions;
            }
        }
        private ObjectSet<portfolio_positions> _portfolio_positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<position_status> position_status
        {
            get
            {
                if ((_position_status == null))
                {
                    _position_status = base.CreateObjectSet<position_status>("position_status");
                }
                return _position_status;
            }
        }
        private ObjectSet<position_status> _position_status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<accounts> accounts
        {
            get
            {
                if ((_accounts == null))
                {
                    _accounts = base.CreateObjectSet<accounts>("accounts");
                }
                return _accounts;
            }
        }
        private ObjectSet<accounts> _accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sessions> sessions
        {
            get
            {
                if ((_sessions == null))
                {
                    _sessions = base.CreateObjectSet<sessions>("sessions");
                }
                return _sessions;
            }
        }
        private ObjectSet<sessions> _sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<users> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<users>("users");
                }
                return _users;
            }
        }
        private ObjectSet<users> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<accounts_bittrex_data> accounts_bittrex_data
        {
            get
            {
                if ((_accounts_bittrex_data == null))
                {
                    _accounts_bittrex_data = base.CreateObjectSet<accounts_bittrex_data>("accounts_bittrex_data");
                }
                return _accounts_bittrex_data;
            }
        }
        private ObjectSet<accounts_bittrex_data> _accounts_bittrex_data;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<balance_movements> balance_movements
        {
            get
            {
                if ((_balance_movements == null))
                {
                    _balance_movements = base.CreateObjectSet<balance_movements>("balance_movements");
                }
                return _balance_movements;
            }
        }
        private ObjectSet<balance_movements> _balance_movements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<expositions> expositions
        {
            get
            {
                if ((_expositions == null))
                {
                    _expositions = base.CreateObjectSet<expositions>("expositions");
                }
                return _expositions;
            }
        }
        private ObjectSet<expositions> _expositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<strategies> strategies
        {
            get
            {
                if ((_strategies == null))
                {
                    _strategies = base.CreateObjectSet<strategies>("strategies");
                }
                return _strategies;
            }
        }
        private ObjectSet<strategies> _strategies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<accounts_binance_data> accounts_binance_data
        {
            get
            {
                if ((_accounts_binance_data == null))
                {
                    _accounts_binance_data = base.CreateObjectSet<accounts_binance_data>("accounts_binance_data");
                }
                return _accounts_binance_data;
            }
        }
        private ObjectSet<accounts_binance_data> _accounts_binance_data;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<cash_movements> cash_movements
        {
            get
            {
                if ((_cash_movements == null))
                {
                    _cash_movements = base.CreateObjectSet<cash_movements>("cash_movements");
                }
                return _cash_movements;
            }
        }
        private ObjectSet<cash_movements> _cash_movements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<strategies_closing_prices> strategies_closing_prices
        {
            get
            {
                if ((_strategies_closing_prices == null))
                {
                    _strategies_closing_prices = base.CreateObjectSet<strategies_closing_prices>("strategies_closing_prices");
                }
                return _strategies_closing_prices;
            }
        }
        private ObjectSet<strategies_closing_prices> _strategies_closing_prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<strategies_hourly_closing_prices> strategies_hourly_closing_prices
        {
            get
            {
                if ((_strategies_hourly_closing_prices == null))
                {
                    _strategies_hourly_closing_prices = base.CreateObjectSet<strategies_hourly_closing_prices>("strategies_hourly_closing_prices");
                }
                return _strategies_hourly_closing_prices;
            }
        }
        private ObjectSet<strategies_hourly_closing_prices> _strategies_hourly_closing_prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<instructions> instructions
        {
            get
            {
                if ((_instructions == null))
                {
                    _instructions = base.CreateObjectSet<instructions>("instructions");
                }
                return _instructions;
            }
        }
        private ObjectSet<instructions> _instructions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the account_portfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccount_portfolios(account_portfolios account_portfolios)
        {
            base.AddObject("account_portfolios", account_portfolios);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the account_positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccount_positions(account_positions account_positions)
        {
            base.AddObject("account_positions", account_positions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the brokers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobrokers(brokers brokers)
        {
            base.AddObject("brokers", brokers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocustomers(customers customers)
        {
            base.AddObject("customers", customers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the instruction_types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinstruction_types(instruction_types instruction_types)
        {
            base.AddObject("instruction_types", instruction_types);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lookups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolookups(lookups lookups)
        {
            base.AddObject("lookups", lookups);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the model_portfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomodel_portfolios(model_portfolios model_portfolios)
        {
            base.AddObject("model_portfolios", model_portfolios);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the portfolio_positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToportfolio_positions(portfolio_positions portfolio_positions)
        {
            base.AddObject("portfolio_positions", portfolio_positions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the position_status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToposition_status(position_status position_status)
        {
            base.AddObject("position_status", position_status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccounts(accounts accounts)
        {
            base.AddObject("accounts", accounts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosessions(sessions sessions)
        {
            base.AddObject("sessions", sessions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(users users)
        {
            base.AddObject("users", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accounts_bittrex_data EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccounts_bittrex_data(accounts_bittrex_data accounts_bittrex_data)
        {
            base.AddObject("accounts_bittrex_data", accounts_bittrex_data);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the balance_movements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobalance_movements(balance_movements balance_movements)
        {
            base.AddObject("balance_movements", balance_movements);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the expositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToexpositions(expositions expositions)
        {
            base.AddObject("expositions", expositions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the strategies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostrategies(strategies strategies)
        {
            base.AddObject("strategies", strategies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accounts_binance_data EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccounts_binance_data(accounts_binance_data accounts_binance_data)
        {
            base.AddObject("accounts_binance_data", accounts_binance_data);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cash_movements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocash_movements(cash_movements cash_movements)
        {
            base.AddObject("cash_movements", cash_movements);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the strategies_closing_prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostrategies_closing_prices(strategies_closing_prices strategies_closing_prices)
        {
            base.AddObject("strategies_closing_prices", strategies_closing_prices);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the strategies_hourly_closing_prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostrategies_hourly_closing_prices(strategies_hourly_closing_prices strategies_hourly_closing_prices)
        {
            base.AddObject("strategies_hourly_closing_prices", strategies_hourly_closing_prices);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the instructions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinstructions(instructions instructions)
        {
            base.AddObject("instructions", instructions);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int QRY_SCRN_COMBOS_FILTERS_BUNDLE()
        {
            return base.ExecuteFunction("QRY_SCRN_COMBOS_FILTERS_BUNDLE");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pageNumber">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        public ObjectResult<QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result> QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL(Nullable<global::System.Int64> pageNumber, Nullable<global::System.Int64> pageSize)
        {
            ObjectParameter pageNumberParameter;
            if (pageNumber.HasValue)
            {
                pageNumberParameter = new ObjectParameter("PageNumber", pageNumber);
            }
            else
            {
                pageNumberParameter = new ObjectParameter("PageNumber", typeof(global::System.Int64));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result>("QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL", pageNumberParameter, pageSizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idUsuario">No Metadata Documentation available.</param>
        /// <param name="nombrePantalla">No Metadata Documentation available.</param>
        public int QRY_UI_USER_SCREEN_STATE(Nullable<global::System.Int32> idUsuario, global::System.String nombrePantalla)
        {
            ObjectParameter idUsuarioParameter;
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("IdUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("IdUsuario", typeof(global::System.Int32));
            }
    
            ObjectParameter nombrePantallaParameter;
            if (nombrePantalla != null)
            {
                nombrePantallaParameter = new ObjectParameter("NombrePantalla", nombrePantalla);
            }
            else
            {
                nombrePantallaParameter = new ObjectParameter("NombrePantalla", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("QRY_UI_USER_SCREEN_STATE", idUsuarioParameter, nombrePantallaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="customerId">No Metadata Documentation available.</param>
        public ObjectResult<QRY_SCRN_CUSTOMERS_ENTITY_FULL_Result> QRY_SCRN_CUSTOMERS_ENTITY_FULL(Nullable<global::System.Int64> customerId)
        {
            ObjectParameter customerIdParameter;
            if (customerId.HasValue)
            {
                customerIdParameter = new ObjectParameter("CustomerId", customerId);
            }
            else
            {
                customerIdParameter = new ObjectParameter("CustomerId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<QRY_SCRN_CUSTOMERS_ENTITY_FULL_Result>("QRY_SCRN_CUSTOMERS_ENTITY_FULL", customerIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="positionId">No Metadata Documentation available.</param>
        /// <param name="accountId">No Metadata Documentation available.</param>
        public ObjectResult<QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result> QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL(Nullable<global::System.Int64> positionId, Nullable<global::System.Int32> accountId)
        {
            ObjectParameter positionIdParameter;
            if (positionId.HasValue)
            {
                positionIdParameter = new ObjectParameter("PositionId", positionId);
            }
            else
            {
                positionIdParameter = new ObjectParameter("PositionId", typeof(global::System.Int64));
            }
    
            ObjectParameter accountIdParameter;
            if (accountId.HasValue)
            {
                accountIdParameter = new ObjectParameter("AccountId", accountId);
            }
            else
            {
                accountIdParameter = new ObjectParameter("AccountId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result>("QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL", positionIdParameter, accountIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="accountId">No Metadata Documentation available.</param>
        /// <param name="customerId">No Metadata Documentation available.</param>
        /// <param name="positionStatus">No Metadata Documentation available.</param>
        /// <param name="cryptoId">No Metadata Documentation available.</param>
        /// <param name="pageNumber">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        public ObjectResult<QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result> QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL(Nullable<global::System.Int32> accountId, Nullable<global::System.Int32> customerId, global::System.String positionStatus, global::System.String cryptoId, Nullable<global::System.Int64> pageNumber, Nullable<global::System.Int64> pageSize)
        {
            ObjectParameter accountIdParameter;
            if (accountId.HasValue)
            {
                accountIdParameter = new ObjectParameter("AccountId", accountId);
            }
            else
            {
                accountIdParameter = new ObjectParameter("AccountId", typeof(global::System.Int32));
            }
    
            ObjectParameter customerIdParameter;
            if (customerId.HasValue)
            {
                customerIdParameter = new ObjectParameter("CustomerId", customerId);
            }
            else
            {
                customerIdParameter = new ObjectParameter("CustomerId", typeof(global::System.Int32));
            }
    
            ObjectParameter positionStatusParameter;
            if (positionStatus != null)
            {
                positionStatusParameter = new ObjectParameter("PositionStatus", positionStatus);
            }
            else
            {
                positionStatusParameter = new ObjectParameter("PositionStatus", typeof(global::System.String));
            }
    
            ObjectParameter cryptoIdParameter;
            if (cryptoId != null)
            {
                cryptoIdParameter = new ObjectParameter("CryptoId", cryptoId);
            }
            else
            {
                cryptoIdParameter = new ObjectParameter("CryptoId", typeof(global::System.String));
            }
    
            ObjectParameter pageNumberParameter;
            if (pageNumber.HasValue)
            {
                pageNumberParameter = new ObjectParameter("PageNumber", pageNumber);
            }
            else
            {
                pageNumberParameter = new ObjectParameter("PageNumber", typeof(global::System.Int64));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result>("QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL", accountIdParameter, customerIdParameter, positionStatusParameter, cryptoIdParameter, pageNumberParameter, pageSizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="accountId">No Metadata Documentation available.</param>
        public ObjectResult<QRY_SCRN_ACCOUNTS_ENTITY_FULL_Result> QRY_SCRN_ACCOUNTS_ENTITY_FULL(Nullable<global::System.Int64> accountId)
        {
            ObjectParameter accountIdParameter;
            if (accountId.HasValue)
            {
                accountIdParameter = new ObjectParameter("AccountId", accountId);
            }
            else
            {
                accountIdParameter = new ObjectParameter("AccountId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<QRY_SCRN_ACCOUNTS_ENTITY_FULL_Result>("QRY_SCRN_ACCOUNTS_ENTITY_FULL", accountIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pageNumber">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        public ObjectResult<QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result> QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL(Nullable<global::System.Int64> pageNumber, Nullable<global::System.Int64> pageSize)
        {
            ObjectParameter pageNumberParameter;
            if (pageNumber.HasValue)
            {
                pageNumberParameter = new ObjectParameter("PageNumber", pageNumber);
            }
            else
            {
                pageNumberParameter = new ObjectParameter("PageNumber", typeof(global::System.Int64));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result>("QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL", pageNumberParameter, pageSizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="positionId">No Metadata Documentation available.</param>
        public ObjectResult<QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result> QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL(Nullable<global::System.Int64> positionId)
        {
            ObjectParameter positionIdParameter;
            if (positionId.HasValue)
            {
                positionIdParameter = new ObjectParameter("PositionId", positionId);
            }
            else
            {
                positionIdParameter = new ObjectParameter("PositionId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result>("QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL", positionIdParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="account_portfolios")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account_portfolios : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account_portfolios object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="account_id">Initial value of the account_id property.</param>
        /// <param name="portfolio_id">Initial value of the portfolio_id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="active">Initial value of the active property.</param>
        public static account_portfolios Createaccount_portfolios(global::System.Int32 id, global::System.Int32 account_id, global::System.Int32 portfolio_id, global::System.DateTime date, global::System.Boolean active)
        {
            account_portfolios account_portfolios = new account_portfolios();
            account_portfolios.id = id;
            account_portfolios.account_id = account_id;
            account_portfolios.portfolio_id = portfolio_id;
            account_portfolios.date = date;
            account_portfolios.active = active;
            return account_portfolios;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 account_id
        {
            get
            {
                return _account_id;
            }
            set
            {
                Onaccount_idChanging(value);
                ReportPropertyChanging("account_id");
                _account_id = StructuralObject.SetValidValue(value, "account_id");
                ReportPropertyChanged("account_id");
                Onaccount_idChanged();
            }
        }
        private global::System.Int32 _account_id;
        partial void Onaccount_idChanging(global::System.Int32 value);
        partial void Onaccount_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 portfolio_id
        {
            get
            {
                return _portfolio_id;
            }
            set
            {
                Onportfolio_idChanging(value);
                ReportPropertyChanging("portfolio_id");
                _portfolio_id = StructuralObject.SetValidValue(value, "portfolio_id");
                ReportPropertyChanged("portfolio_id");
                Onportfolio_idChanged();
            }
        }
        private global::System.Int32 _portfolio_id;
        partial void Onportfolio_idChanging(global::System.Int32 value);
        partial void Onportfolio_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value, "active");
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_account_portfolios_portfolios", "model_portfolios")]
        public model_portfolios model_portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<model_portfolios>("MomentumBackTestsModel.FK_account_portfolios_portfolios", "model_portfolios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<model_portfolios>("MomentumBackTestsModel.FK_account_portfolios_portfolios", "model_portfolios").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<model_portfolios> model_portfoliosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<model_portfolios>("MomentumBackTestsModel.FK_account_portfolios_portfolios", "model_portfolios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<model_portfolios>("MomentumBackTestsModel.FK_account_portfolios_portfolios", "model_portfolios", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_account_portfolios_accounts", "accounts")]
        public accounts accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_account_portfolios_accounts", "accounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_account_portfolios_accounts", "accounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<accounts> accountsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_account_portfolios_accounts", "accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<accounts>("MomentumBackTestsModel.FK_account_portfolios_accounts", "accounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_account_portfolios", "instructions")]
        public EntityCollection<instructions> instructions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_account_portfolios", "instructions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_account_portfolios", "instructions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="account_positions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account_positions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account_positions object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="account_id">Initial value of the account_id property.</param>
        /// <param name="symbol">Initial value of the symbol property.</param>
        /// <param name="active">Initial value of the active property.</param>
        public static account_positions Createaccount_positions(global::System.Int64 id, global::System.Int32 account_id, global::System.String symbol, global::System.Boolean active)
        {
            account_positions account_positions = new account_positions();
            account_positions.id = id;
            account_positions.account_id = account_id;
            account_positions.symbol = symbol;
            account_positions.active = active;
            return account_positions;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 account_id
        {
            get
            {
                return _account_id;
            }
            set
            {
                Onaccount_idChanging(value);
                ReportPropertyChanging("account_id");
                _account_id = StructuralObject.SetValidValue(value, "account_id");
                ReportPropertyChanged("account_id");
                Onaccount_idChanged();
            }
        }
        private global::System.Int32 _account_id;
        partial void Onaccount_idChanging(global::System.Int32 value);
        partial void Onaccount_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, false, "symbol");
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value, "weight");
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private Nullable<global::System.Decimal> _weight;
        partial void OnweightChanging(Nullable<global::System.Decimal> value);
        partial void OnweightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> shares
        {
            get
            {
                return _shares;
            }
            set
            {
                OnsharesChanging(value);
                ReportPropertyChanging("shares");
                _shares = StructuralObject.SetValidValue(value, "shares");
                ReportPropertyChanged("shares");
                OnsharesChanged();
            }
        }
        private Nullable<global::System.Int32> _shares;
        partial void OnsharesChanging(Nullable<global::System.Int32> value);
        partial void OnsharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> market_price
        {
            get
            {
                return _market_price;
            }
            set
            {
                Onmarket_priceChanging(value);
                ReportPropertyChanging("market_price");
                _market_price = StructuralObject.SetValidValue(value, "market_price");
                ReportPropertyChanged("market_price");
                Onmarket_priceChanged();
            }
        }
        private Nullable<global::System.Decimal> _market_price;
        partial void Onmarket_priceChanging(Nullable<global::System.Decimal> value);
        partial void Onmarket_priceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ammount
        {
            get
            {
                return _ammount;
            }
            set
            {
                OnammountChanging(value);
                ReportPropertyChanging("ammount");
                _ammount = StructuralObject.SetValidValue(value, "ammount");
                ReportPropertyChanged("ammount");
                OnammountChanged();
            }
        }
        private Nullable<global::System.Decimal> _ammount;
        partial void OnammountChanging(Nullable<global::System.Decimal> value);
        partial void OnammountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, true, "status");
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value, "active");
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String original_symbol
        {
            get
            {
                return _original_symbol;
            }
            set
            {
                Onoriginal_symbolChanging(value);
                ReportPropertyChanging("original_symbol");
                _original_symbol = StructuralObject.SetValidValue(value, true, "original_symbol");
                ReportPropertyChanged("original_symbol");
                Onoriginal_symbolChanged();
            }
        }
        private global::System.String _original_symbol;
        partial void Onoriginal_symbolChanging(global::System.String value);
        partial void Onoriginal_symbolChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_account_positions_position_status", "position_status")]
        public position_status position_status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<position_status>("MomentumBackTestsModel.FK_account_positions_position_status", "position_status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<position_status>("MomentumBackTestsModel.FK_account_positions_position_status", "position_status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<position_status> position_statusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<position_status>("MomentumBackTestsModel.FK_account_positions_position_status", "position_status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<position_status>("MomentumBackTestsModel.FK_account_positions_position_status", "position_status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_account_positions_accounts", "accounts")]
        public accounts accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_account_positions_accounts", "accounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_account_positions_accounts", "accounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<accounts> accountsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_account_positions_accounts", "accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<accounts>("MomentumBackTestsModel.FK_account_positions_accounts", "accounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_account_positions", "instructions")]
        public EntityCollection<instructions> instructions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_account_positions", "instructions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_account_positions", "instructions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="accounts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class accounts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new accounts object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="customer_id">Initial value of the customer_id property.</param>
        /// <param name="account_number">Initial value of the account_number property.</param>
        /// <param name="broker_id">Initial value of the broker_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static accounts Createaccounts(global::System.Int32 id, global::System.Int32 customer_id, global::System.Int64 account_number, global::System.Int32 broker_id, global::System.String name)
        {
            accounts accounts = new accounts();
            accounts.id = id;
            accounts.customer_id = customer_id;
            accounts.account_number = account_number;
            accounts.broker_id = broker_id;
            accounts.name = name;
            return accounts;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_id
        {
            get
            {
                return _customer_id;
            }
            set
            {
                Oncustomer_idChanging(value);
                ReportPropertyChanging("customer_id");
                _customer_id = StructuralObject.SetValidValue(value, "customer_id");
                ReportPropertyChanged("customer_id");
                Oncustomer_idChanged();
            }
        }
        private global::System.Int32 _customer_id;
        partial void Oncustomer_idChanging(global::System.Int32 value);
        partial void Oncustomer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 account_number
        {
            get
            {
                return _account_number;
            }
            set
            {
                Onaccount_numberChanging(value);
                ReportPropertyChanging("account_number");
                _account_number = StructuralObject.SetValidValue(value, "account_number");
                ReportPropertyChanged("account_number");
                Onaccount_numberChanged();
            }
        }
        private global::System.Int64 _account_number;
        partial void Onaccount_numberChanging(global::System.Int64 value);
        partial void Onaccount_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                Onbroker_idChanging(value);
                ReportPropertyChanging("broker_id");
                _broker_id = StructuralObject.SetValidValue(value, "broker_id");
                ReportPropertyChanged("broker_id");
                Onbroker_idChanged();
            }
        }
        private global::System.Int32 _broker_id;
        partial void Onbroker_idChanging(global::System.Int32 value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String generic_s_number
        {
            get
            {
                return _generic_s_number;
            }
            set
            {
                Ongeneric_s_numberChanging(value);
                ReportPropertyChanging("generic_s_number");
                _generic_s_number = StructuralObject.SetValidValue(value, true, "generic_s_number");
                ReportPropertyChanged("generic_s_number");
                Ongeneric_s_numberChanged();
            }
        }
        private global::System.String _generic_s_number;
        partial void Ongeneric_s_numberChanging(global::System.String value);
        partial void Ongeneric_s_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> balance
        {
            get
            {
                return _balance;
            }
            set
            {
                OnbalanceChanging(value);
                ReportPropertyChanging("balance");
                _balance = StructuralObject.SetValidValue(value, "balance");
                ReportPropertyChanged("balance");
                OnbalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _balance;
        partial void OnbalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnbalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> strategy_id
        {
            get
            {
                return _strategy_id;
            }
            set
            {
                Onstrategy_idChanging(value);
                ReportPropertyChanging("strategy_id");
                _strategy_id = StructuralObject.SetValidValue(value, "strategy_id");
                ReportPropertyChanged("strategy_id");
                Onstrategy_idChanged();
            }
        }
        private Nullable<global::System.Int32> _strategy_id;
        partial void Onstrategy_idChanging(Nullable<global::System.Int32> value);
        partial void Onstrategy_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_account_portfolios_accounts", "account_portfolios")]
        public EntityCollection<account_portfolios> account_portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account_portfolios>("MomentumBackTestsModel.FK_account_portfolios_accounts", "account_portfolios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account_portfolios>("MomentumBackTestsModel.FK_account_portfolios_accounts", "account_portfolios", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_account_positions_accounts", "account_positions")]
        public EntityCollection<account_positions> account_positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account_positions>("MomentumBackTestsModel.FK_account_positions_accounts", "account_positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account_positions>("MomentumBackTestsModel.FK_account_positions_accounts", "account_positions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_brokers", "brokers")]
        public brokers brokers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("MomentumBackTestsModel.FK_accounts_brokers", "brokers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("MomentumBackTestsModel.FK_accounts_brokers", "brokers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<brokers> brokersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("MomentumBackTestsModel.FK_accounts_brokers", "brokers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<brokers>("MomentumBackTestsModel.FK_accounts_brokers", "brokers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_customers", "customers")]
        public customers customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_accounts_customers", "customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_accounts_customers", "customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<customers> customersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_accounts_customers", "customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<customers>("MomentumBackTestsModel.FK_accounts_customers", "customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_bittrex_data_accounts", "accounts_bittrex_data")]
        public EntityCollection<accounts_bittrex_data> accounts_bittrex_data
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<accounts_bittrex_data>("MomentumBackTestsModel.FK_accounts_bittrex_data_accounts", "accounts_bittrex_data");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<accounts_bittrex_data>("MomentumBackTestsModel.FK_accounts_bittrex_data_accounts", "accounts_bittrex_data", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_strategies", "strategies")]
        public strategies strategies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_accounts_strategies", "strategies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_accounts_strategies", "strategies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<strategies> strategiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_accounts_strategies", "strategies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<strategies>("MomentumBackTestsModel.FK_accounts_strategies", "strategies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_binance_data_accounts", "accounts_binance_data")]
        public EntityCollection<accounts_binance_data> accounts_binance_data
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<accounts_binance_data>("MomentumBackTestsModel.FK_accounts_binance_data_accounts", "accounts_binance_data");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<accounts_binance_data>("MomentumBackTestsModel.FK_accounts_binance_data_accounts", "accounts_binance_data", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_accounts", "instructions")]
        public EntityCollection<instructions> instructions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_accounts", "instructions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_accounts", "instructions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="accounts_binance_data")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class accounts_binance_data : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new accounts_binance_data object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="account_id">Initial value of the account_id property.</param>
        /// <param name="api_key">Initial value of the api_key property.</param>
        /// <param name="secret">Initial value of the secret property.</param>
        public static accounts_binance_data Createaccounts_binance_data(global::System.Int32 id, global::System.Int32 account_id, global::System.String api_key, global::System.String secret)
        {
            accounts_binance_data accounts_binance_data = new accounts_binance_data();
            accounts_binance_data.id = id;
            accounts_binance_data.account_id = account_id;
            accounts_binance_data.api_key = api_key;
            accounts_binance_data.secret = secret;
            return accounts_binance_data;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 account_id
        {
            get
            {
                return _account_id;
            }
            set
            {
                Onaccount_idChanging(value);
                ReportPropertyChanging("account_id");
                _account_id = StructuralObject.SetValidValue(value, "account_id");
                ReportPropertyChanged("account_id");
                Onaccount_idChanged();
            }
        }
        private global::System.Int32 _account_id;
        partial void Onaccount_idChanging(global::System.Int32 value);
        partial void Onaccount_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String api_key
        {
            get
            {
                return _api_key;
            }
            set
            {
                Onapi_keyChanging(value);
                ReportPropertyChanging("api_key");
                _api_key = StructuralObject.SetValidValue(value, false, "api_key");
                ReportPropertyChanged("api_key");
                Onapi_keyChanged();
            }
        }
        private global::System.String _api_key;
        partial void Onapi_keyChanging(global::System.String value);
        partial void Onapi_keyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String secret
        {
            get
            {
                return _secret;
            }
            set
            {
                OnsecretChanging(value);
                ReportPropertyChanging("secret");
                _secret = StructuralObject.SetValidValue(value, false, "secret");
                ReportPropertyChanged("secret");
                OnsecretChanged();
            }
        }
        private global::System.String _secret;
        partial void OnsecretChanging(global::System.String value);
        partial void OnsecretChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_binance_data_accounts", "accounts")]
        public accounts accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_accounts_binance_data_accounts", "accounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_accounts_binance_data_accounts", "accounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<accounts> accountsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_accounts_binance_data_accounts", "accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<accounts>("MomentumBackTestsModel.FK_accounts_binance_data_accounts", "accounts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="accounts_bittrex_data")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class accounts_bittrex_data : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new accounts_bittrex_data object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="account_id">Initial value of the account_id property.</param>
        /// <param name="api_key">Initial value of the api_key property.</param>
        /// <param name="secret">Initial value of the secret property.</param>
        public static accounts_bittrex_data Createaccounts_bittrex_data(global::System.Int32 id, global::System.Int32 account_id, global::System.String api_key, global::System.String secret)
        {
            accounts_bittrex_data accounts_bittrex_data = new accounts_bittrex_data();
            accounts_bittrex_data.id = id;
            accounts_bittrex_data.account_id = account_id;
            accounts_bittrex_data.api_key = api_key;
            accounts_bittrex_data.secret = secret;
            return accounts_bittrex_data;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 account_id
        {
            get
            {
                return _account_id;
            }
            set
            {
                Onaccount_idChanging(value);
                ReportPropertyChanging("account_id");
                _account_id = StructuralObject.SetValidValue(value, "account_id");
                ReportPropertyChanged("account_id");
                Onaccount_idChanged();
            }
        }
        private global::System.Int32 _account_id;
        partial void Onaccount_idChanging(global::System.Int32 value);
        partial void Onaccount_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String api_key
        {
            get
            {
                return _api_key;
            }
            set
            {
                Onapi_keyChanging(value);
                ReportPropertyChanging("api_key");
                _api_key = StructuralObject.SetValidValue(value, false, "api_key");
                ReportPropertyChanged("api_key");
                Onapi_keyChanged();
            }
        }
        private global::System.String _api_key;
        partial void Onapi_keyChanging(global::System.String value);
        partial void Onapi_keyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String secret
        {
            get
            {
                return _secret;
            }
            set
            {
                OnsecretChanging(value);
                ReportPropertyChanging("secret");
                _secret = StructuralObject.SetValidValue(value, false, "secret");
                ReportPropertyChanged("secret");
                OnsecretChanged();
            }
        }
        private global::System.String _secret;
        partial void OnsecretChanging(global::System.String value);
        partial void OnsecretChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_bittrex_data_accounts", "accounts")]
        public accounts accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_accounts_bittrex_data_accounts", "accounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_accounts_bittrex_data_accounts", "accounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<accounts> accountsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_accounts_bittrex_data_accounts", "accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<accounts>("MomentumBackTestsModel.FK_accounts_bittrex_data_accounts", "accounts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="balance_movements")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class balance_movements : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new balance_movements object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="strategy_id">Initial value of the strategy_id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="net_ammount_usd">Initial value of the net_ammount_usd property.</param>
        /// <param name="net_ammount_btc">Initial value of the net_ammount_btc property.</param>
        /// <param name="shares">Initial value of the shares property.</param>
        public static balance_movements Createbalance_movements(global::System.Int64 id, global::System.Int32 strategy_id, global::System.DateTime date, global::System.Decimal net_ammount_usd, global::System.Decimal net_ammount_btc, global::System.Decimal shares)
        {
            balance_movements balance_movements = new balance_movements();
            balance_movements.id = id;
            balance_movements.strategy_id = strategy_id;
            balance_movements.date = date;
            balance_movements.net_ammount_usd = net_ammount_usd;
            balance_movements.net_ammount_btc = net_ammount_btc;
            balance_movements.shares = shares;
            return balance_movements;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 strategy_id
        {
            get
            {
                return _strategy_id;
            }
            set
            {
                Onstrategy_idChanging(value);
                ReportPropertyChanging("strategy_id");
                _strategy_id = StructuralObject.SetValidValue(value, "strategy_id");
                ReportPropertyChanged("strategy_id");
                Onstrategy_idChanged();
            }
        }
        private global::System.Int32 _strategy_id;
        partial void Onstrategy_idChanging(global::System.Int32 value);
        partial void Onstrategy_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal net_ammount_usd
        {
            get
            {
                return _net_ammount_usd;
            }
            set
            {
                Onnet_ammount_usdChanging(value);
                ReportPropertyChanging("net_ammount_usd");
                _net_ammount_usd = StructuralObject.SetValidValue(value, "net_ammount_usd");
                ReportPropertyChanged("net_ammount_usd");
                Onnet_ammount_usdChanged();
            }
        }
        private global::System.Decimal _net_ammount_usd;
        partial void Onnet_ammount_usdChanging(global::System.Decimal value);
        partial void Onnet_ammount_usdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal net_ammount_btc
        {
            get
            {
                return _net_ammount_btc;
            }
            set
            {
                Onnet_ammount_btcChanging(value);
                ReportPropertyChanging("net_ammount_btc");
                _net_ammount_btc = StructuralObject.SetValidValue(value, "net_ammount_btc");
                ReportPropertyChanged("net_ammount_btc");
                Onnet_ammount_btcChanged();
            }
        }
        private global::System.Decimal _net_ammount_btc;
        partial void Onnet_ammount_btcChanging(global::System.Decimal value);
        partial void Onnet_ammount_btcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_id
        {
            get
            {
                return _customer_id;
            }
            set
            {
                Oncustomer_idChanging(value);
                ReportPropertyChanging("customer_id");
                _customer_id = StructuralObject.SetValidValue(value, "customer_id");
                ReportPropertyChanged("customer_id");
                Oncustomer_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_id;
        partial void Oncustomer_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal shares
        {
            get
            {
                return _shares;
            }
            set
            {
                OnsharesChanging(value);
                ReportPropertyChanging("shares");
                _shares = StructuralObject.SetValidValue(value, "shares");
                ReportPropertyChanged("shares");
                OnsharesChanged();
            }
        }
        private global::System.Decimal _shares;
        partial void OnsharesChanging(global::System.Decimal value);
        partial void OnsharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, true, "text");
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_balance_movements_customers", "customers")]
        public customers customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_balance_movements_customers", "customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_balance_movements_customers", "customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<customers> customersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_balance_movements_customers", "customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<customers>("MomentumBackTestsModel.FK_balance_movements_customers", "customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_balance_movements_strategies", "strategies")]
        public strategies strategies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_balance_movements_strategies", "strategies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_balance_movements_strategies", "strategies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<strategies> strategiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_balance_movements_strategies", "strategies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<strategies>("MomentumBackTestsModel.FK_balance_movements_strategies", "strategies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="brokers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class brokers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new brokers object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="code">Initial value of the code property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static brokers Createbrokers(global::System.Int32 id, global::System.String code, global::System.String name)
        {
            brokers brokers = new brokers();
            brokers.id = id;
            brokers.code = code;
            brokers.name = name;
            return brokers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                OncodeChanging(value);
                ReportPropertyChanging("code");
                _code = StructuralObject.SetValidValue(value, false, "code");
                ReportPropertyChanged("code");
                OncodeChanged();
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_brokers", "accounts")]
        public EntityCollection<accounts> accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<accounts>("MomentumBackTestsModel.FK_accounts_brokers", "accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<accounts>("MomentumBackTestsModel.FK_accounts_brokers", "accounts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="cash_movements")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cash_movements : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new cash_movements object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="net_ammount_usd">Initial value of the net_ammount_usd property.</param>
        /// <param name="customer_id">Initial value of the customer_id property.</param>
        public static cash_movements Createcash_movements(global::System.Int64 id, global::System.DateTime date, global::System.Decimal net_ammount_usd, global::System.Int32 customer_id)
        {
            cash_movements cash_movements = new cash_movements();
            cash_movements.id = id;
            cash_movements.date = date;
            cash_movements.net_ammount_usd = net_ammount_usd;
            cash_movements.customer_id = customer_id;
            return cash_movements;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal net_ammount_usd
        {
            get
            {
                return _net_ammount_usd;
            }
            set
            {
                Onnet_ammount_usdChanging(value);
                ReportPropertyChanging("net_ammount_usd");
                _net_ammount_usd = StructuralObject.SetValidValue(value, "net_ammount_usd");
                ReportPropertyChanged("net_ammount_usd");
                Onnet_ammount_usdChanged();
            }
        }
        private global::System.Decimal _net_ammount_usd;
        partial void Onnet_ammount_usdChanging(global::System.Decimal value);
        partial void Onnet_ammount_usdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_id
        {
            get
            {
                return _customer_id;
            }
            set
            {
                Oncustomer_idChanging(value);
                ReportPropertyChanging("customer_id");
                _customer_id = StructuralObject.SetValidValue(value, "customer_id");
                ReportPropertyChanged("customer_id");
                Oncustomer_idChanged();
            }
        }
        private global::System.Int32 _customer_id;
        partial void Oncustomer_idChanging(global::System.Int32 value);
        partial void Oncustomer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, true, "text");
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="customers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class customers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new customers object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="document_type">Initial value of the document_type property.</param>
        /// <param name="document_number">Initial value of the document_number property.</param>
        public static customers Createcustomers(global::System.Int32 id, global::System.String first_name, global::System.String last_name, global::System.String document_type, global::System.Int64 document_number)
        {
            customers customers = new customers();
            customers.Id = id;
            customers.first_name = first_name;
            customers.last_name = last_name;
            customers.document_type = document_type;
            customers.document_number = document_number;
            return customers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String document_type
        {
            get
            {
                return _document_type;
            }
            set
            {
                Ondocument_typeChanging(value);
                ReportPropertyChanging("document_type");
                _document_type = StructuralObject.SetValidValue(value, false, "document_type");
                ReportPropertyChanged("document_type");
                Ondocument_typeChanged();
            }
        }
        private global::System.String _document_type;
        partial void Ondocument_typeChanging(global::System.String value);
        partial void Ondocument_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 document_number
        {
            get
            {
                return _document_number;
            }
            set
            {
                Ondocument_numberChanging(value);
                ReportPropertyChanging("document_number");
                _document_number = StructuralObject.SetValidValue(value, "document_number");
                ReportPropertyChanged("document_number");
                Ondocument_numberChanged();
            }
        }
        private global::System.Int64 _document_number;
        partial void Ondocument_numberChanging(global::System.Int64 value);
        partial void Ondocument_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sex
        {
            get
            {
                return _sex;
            }
            set
            {
                OnsexChanging(value);
                ReportPropertyChanging("sex");
                _sex = StructuralObject.SetValidValue(value, true, "sex");
                ReportPropertyChanged("sex");
                OnsexChanged();
            }
        }
        private global::System.String _sex;
        partial void OnsexChanging(global::System.String value);
        partial void OnsexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> birth_date
        {
            get
            {
                return _birth_date;
            }
            set
            {
                Onbirth_dateChanging(value);
                ReportPropertyChanging("birth_date");
                _birth_date = StructuralObject.SetValidValue(value, "birth_date");
                ReportPropertyChanged("birth_date");
                Onbirth_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _birth_date;
        partial void Onbirth_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onbirth_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact
        {
            get
            {
                return _contact;
            }
            set
            {
                OncontactChanging(value);
                ReportPropertyChanging("contact");
                _contact = StructuralObject.SetValidValue(value, true, "contact");
                ReportPropertyChanged("contact");
                OncontactChanged();
            }
        }
        private global::System.String _contact;
        partial void OncontactChanging(global::System.String value);
        partial void OncontactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_customers", "accounts")]
        public EntityCollection<accounts> accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<accounts>("MomentumBackTestsModel.FK_accounts_customers", "accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<accounts>("MomentumBackTestsModel.FK_accounts_customers", "accounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_balance_movements_customers", "balance_movements")]
        public EntityCollection<balance_movements> balance_movements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<balance_movements>("MomentumBackTestsModel.FK_balance_movements_customers", "balance_movements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<balance_movements>("MomentumBackTestsModel.FK_balance_movements_customers", "balance_movements", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_expositions_customers", "expositions")]
        public EntityCollection<expositions> expositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<expositions>("MomentumBackTestsModel.FK_expositions_customers", "expositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<expositions>("MomentumBackTestsModel.FK_expositions_customers", "expositions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="expositions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class expositions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new expositions object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="customer_id">Initial value of the customer_id property.</param>
        /// <param name="strategy_id">Initial value of the strategy_id property.</param>
        /// <param name="weight">Initial value of the weight property.</param>
        public static expositions Createexpositions(global::System.Int32 id, global::System.Int32 customer_id, global::System.Int32 strategy_id, global::System.Decimal weight)
        {
            expositions expositions = new expositions();
            expositions.id = id;
            expositions.customer_id = customer_id;
            expositions.strategy_id = strategy_id;
            expositions.weight = weight;
            return expositions;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_id
        {
            get
            {
                return _customer_id;
            }
            set
            {
                Oncustomer_idChanging(value);
                ReportPropertyChanging("customer_id");
                _customer_id = StructuralObject.SetValidValue(value, "customer_id");
                ReportPropertyChanged("customer_id");
                Oncustomer_idChanged();
            }
        }
        private global::System.Int32 _customer_id;
        partial void Oncustomer_idChanging(global::System.Int32 value);
        partial void Oncustomer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 strategy_id
        {
            get
            {
                return _strategy_id;
            }
            set
            {
                Onstrategy_idChanging(value);
                ReportPropertyChanging("strategy_id");
                _strategy_id = StructuralObject.SetValidValue(value, "strategy_id");
                ReportPropertyChanged("strategy_id");
                Onstrategy_idChanged();
            }
        }
        private global::System.Int32 _strategy_id;
        partial void Onstrategy_idChanging(global::System.Int32 value);
        partial void Onstrategy_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value, "weight");
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private global::System.Decimal _weight;
        partial void OnweightChanging(global::System.Decimal value);
        partial void OnweightChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_expositions_customers", "customers")]
        public customers customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_expositions_customers", "customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_expositions_customers", "customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<customers> customersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customers>("MomentumBackTestsModel.FK_expositions_customers", "customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<customers>("MomentumBackTestsModel.FK_expositions_customers", "customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_expositions_strategies", "strategies")]
        public strategies strategies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_expositions_strategies", "strategies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_expositions_strategies", "strategies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<strategies> strategiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_expositions_strategies", "strategies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<strategies>("MomentumBackTestsModel.FK_expositions_strategies", "strategies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="instruction_types")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class instruction_types : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new instruction_types object.
        /// </summary>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="description">Initial value of the description property.</param>
        public static instruction_types Createinstruction_types(global::System.String type, global::System.String description)
        {
            instruction_types instruction_types = new instruction_types();
            instruction_types.type = type;
            instruction_types.description = description;
            return instruction_types;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                if (_type != value)
                {
                    OntypeChanging(value);
                    ReportPropertyChanging("type");
                    _type = StructuralObject.SetValidValue(value, false, "type");
                    ReportPropertyChanged("type");
                    OntypeChanged();
                }
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_instruction_types", "instructions")]
        public EntityCollection<instructions> instructions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_instruction_types", "instructions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_instruction_types", "instructions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="instructions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class instructions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new instructions object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="account_id">Initial value of the account_id property.</param>
        /// <param name="executed">Initial value of the executed property.</param>
        /// <param name="is_merge">Initial value of the is_merge property.</param>
        public static instructions Createinstructions(global::System.Int32 id, global::System.DateTime date, global::System.String type, global::System.Int32 account_id, global::System.Boolean executed, global::System.Boolean is_merge)
        {
            instructions instructions = new instructions();
            instructions.id = id;
            instructions.date = date;
            instructions.type = type;
            instructions.account_id = account_id;
            instructions.executed = executed;
            instructions.is_merge = is_merge;
            return instructions;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false, "type");
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> portfolio_id
        {
            get
            {
                return _portfolio_id;
            }
            set
            {
                Onportfolio_idChanging(value);
                ReportPropertyChanging("portfolio_id");
                _portfolio_id = StructuralObject.SetValidValue(value, "portfolio_id");
                ReportPropertyChanged("portfolio_id");
                Onportfolio_idChanged();
            }
        }
        private Nullable<global::System.Int32> _portfolio_id;
        partial void Onportfolio_idChanging(Nullable<global::System.Int32> value);
        partial void Onportfolio_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> account_position_id
        {
            get
            {
                return _account_position_id;
            }
            set
            {
                Onaccount_position_idChanging(value);
                ReportPropertyChanging("account_position_id");
                _account_position_id = StructuralObject.SetValidValue(value, "account_position_id");
                ReportPropertyChanged("account_position_id");
                Onaccount_position_idChanged();
            }
        }
        private Nullable<global::System.Int64> _account_position_id;
        partial void Onaccount_position_idChanging(Nullable<global::System.Int64> value);
        partial void Onaccount_position_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, true, "symbol");
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sec_type
        {
            get
            {
                return _sec_type;
            }
            set
            {
                Onsec_typeChanging(value);
                ReportPropertyChanging("sec_type");
                _sec_type = StructuralObject.SetValidValue(value, true, "sec_type");
                ReportPropertyChanged("sec_type");
                Onsec_typeChanged();
            }
        }
        private global::System.String _sec_type;
        partial void Onsec_typeChanging(global::System.String value);
        partial void Onsec_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> shares
        {
            get
            {
                return _shares;
            }
            set
            {
                OnsharesChanging(value);
                ReportPropertyChanging("shares");
                _shares = StructuralObject.SetValidValue(value, "shares");
                ReportPropertyChanged("shares");
                OnsharesChanged();
            }
        }
        private Nullable<global::System.Int32> _shares;
        partial void OnsharesChanging(Nullable<global::System.Int32> value);
        partial void OnsharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ammount
        {
            get
            {
                return _ammount;
            }
            set
            {
                OnammountChanging(value);
                ReportPropertyChanging("ammount");
                _ammount = StructuralObject.SetValidValue(value, "ammount");
                ReportPropertyChanged("ammount");
                OnammountChanged();
            }
        }
        private Nullable<global::System.Decimal> _ammount;
        partial void OnammountChanging(Nullable<global::System.Decimal> value);
        partial void OnammountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String side
        {
            get
            {
                return _side;
            }
            set
            {
                OnsideChanging(value);
                ReportPropertyChanging("side");
                _side = StructuralObject.SetValidValue(value, true, "side");
                ReportPropertyChanged("side");
                OnsideChanged();
            }
        }
        private global::System.String _side;
        partial void OnsideChanging(global::System.String value);
        partial void OnsideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 account_id
        {
            get
            {
                return _account_id;
            }
            set
            {
                Onaccount_idChanging(value);
                ReportPropertyChanging("account_id");
                _account_id = StructuralObject.SetValidValue(value, "account_id");
                ReportPropertyChanged("account_id");
                Onaccount_idChanged();
            }
        }
        private global::System.Int32 _account_id;
        partial void Onaccount_idChanging(global::System.Int32 value);
        partial void Onaccount_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> related_instruction_id
        {
            get
            {
                return _related_instruction_id;
            }
            set
            {
                Onrelated_instruction_idChanging(value);
                ReportPropertyChanging("related_instruction_id");
                _related_instruction_id = StructuralObject.SetValidValue(value, "related_instruction_id");
                ReportPropertyChanged("related_instruction_id");
                Onrelated_instruction_idChanged();
            }
        }
        private Nullable<global::System.Int32> _related_instruction_id;
        partial void Onrelated_instruction_idChanging(Nullable<global::System.Int32> value);
        partial void Onrelated_instruction_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean executed
        {
            get
            {
                return _executed;
            }
            set
            {
                OnexecutedChanging(value);
                ReportPropertyChanging("executed");
                _executed = StructuralObject.SetValidValue(value, "executed");
                ReportPropertyChanged("executed");
                OnexecutedChanged();
            }
        }
        private global::System.Boolean _executed;
        partial void OnexecutedChanging(global::System.Boolean value);
        partial void OnexecutedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean is_merge
        {
            get
            {
                return _is_merge;
            }
            set
            {
                Onis_mergeChanging(value);
                ReportPropertyChanging("is_merge");
                _is_merge = StructuralObject.SetValidValue(value, "is_merge");
                ReportPropertyChanged("is_merge");
                Onis_mergeChanged();
            }
        }
        private global::System.Boolean _is_merge;
        partial void Onis_mergeChanging(global::System.Boolean value);
        partial void Onis_mergeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> steps
        {
            get
            {
                return _steps;
            }
            set
            {
                OnstepsChanging(value);
                ReportPropertyChanging("steps");
                _steps = StructuralObject.SetValidValue(value, "steps");
                ReportPropertyChanged("steps");
                OnstepsChanged();
            }
        }
        private Nullable<global::System.Int32> _steps;
        partial void OnstepsChanging(Nullable<global::System.Int32> value);
        partial void OnstepsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, true, "text");
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_account_portfolios", "account_portfolios")]
        public account_portfolios account_portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_portfolios>("MomentumBackTestsModel.FK_instructions_account_portfolios", "account_portfolios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_portfolios>("MomentumBackTestsModel.FK_instructions_account_portfolios", "account_portfolios").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account_portfolios> account_portfoliosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_portfolios>("MomentumBackTestsModel.FK_instructions_account_portfolios", "account_portfolios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account_portfolios>("MomentumBackTestsModel.FK_instructions_account_portfolios", "account_portfolios", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_account_positions", "account_positions")]
        public account_positions account_positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_positions>("MomentumBackTestsModel.FK_instructions_account_positions", "account_positions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_positions>("MomentumBackTestsModel.FK_instructions_account_positions", "account_positions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account_positions> account_positionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_positions>("MomentumBackTestsModel.FK_instructions_account_positions", "account_positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account_positions>("MomentumBackTestsModel.FK_instructions_account_positions", "account_positions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_accounts", "accounts")]
        public accounts accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_instructions_accounts", "accounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_instructions_accounts", "accounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<accounts> accountsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accounts>("MomentumBackTestsModel.FK_instructions_accounts", "accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<accounts>("MomentumBackTestsModel.FK_instructions_accounts", "accounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_instruction_types", "instruction_types")]
        public instruction_types instruction_types
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instruction_types>("MomentumBackTestsModel.FK_instructions_instruction_types", "instruction_types").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instruction_types>("MomentumBackTestsModel.FK_instructions_instruction_types", "instruction_types").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<instruction_types> instruction_typesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instruction_types>("MomentumBackTestsModel.FK_instructions_instruction_types", "instruction_types");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<instruction_types>("MomentumBackTestsModel.FK_instructions_instruction_types", "instruction_types", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_instructions", "instructions1")]
        public EntityCollection<instructions> instructions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_instructions", "instructions1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instructions>("MomentumBackTestsModel.FK_instructions_instructions", "instructions1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_instructions_instructions", "instructions")]
        public instructions instructions2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instructions>("MomentumBackTestsModel.FK_instructions_instructions", "instructions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instructions>("MomentumBackTestsModel.FK_instructions_instructions", "instructions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<instructions> instructions2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instructions>("MomentumBackTestsModel.FK_instructions_instructions", "instructions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<instructions>("MomentumBackTestsModel.FK_instructions_instructions", "instructions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="lookups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lookups : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lookups object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="key">Initial value of the key property.</param>
        public static lookups Createlookups(global::System.Int64 id, global::System.String key)
        {
            lookups lookups = new lookups();
            lookups.id = id;
            lookups.key = key;
            return lookups;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String key
        {
            get
            {
                return _key;
            }
            set
            {
                OnkeyChanging(value);
                ReportPropertyChanging("key");
                _key = StructuralObject.SetValidValue(value, false, "key");
                ReportPropertyChanged("key");
                OnkeyChanged();
            }
        }
        private global::System.String _key;
        partial void OnkeyChanging(global::System.String value);
        partial void OnkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String string_value
        {
            get
            {
                return _string_value;
            }
            set
            {
                Onstring_valueChanging(value);
                ReportPropertyChanging("string_value");
                _string_value = StructuralObject.SetValidValue(value, true, "string_value");
                ReportPropertyChanged("string_value");
                Onstring_valueChanged();
            }
        }
        private global::System.String _string_value;
        partial void Onstring_valueChanging(global::System.String value);
        partial void Onstring_valueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> decimal_value
        {
            get
            {
                return _decimal_value;
            }
            set
            {
                Ondecimal_valueChanging(value);
                ReportPropertyChanging("decimal_value");
                _decimal_value = StructuralObject.SetValidValue(value, "decimal_value");
                ReportPropertyChanged("decimal_value");
                Ondecimal_valueChanged();
            }
        }
        private Nullable<global::System.Decimal> _decimal_value;
        partial void Ondecimal_valueChanging(Nullable<global::System.Decimal> value);
        partial void Ondecimal_valueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="model_portfolios")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class model_portfolios : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new model_portfolios object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="date">Initial value of the date property.</param>
        public static model_portfolios Createmodel_portfolios(global::System.Int32 id, global::System.String name, global::System.DateTime date)
        {
            model_portfolios model_portfolios = new model_portfolios();
            model_portfolios.id = id;
            model_portfolios.name = name;
            model_portfolios.date = date;
            return model_portfolios;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_account_portfolios_portfolios", "account_portfolios")]
        public EntityCollection<account_portfolios> account_portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account_portfolios>("MomentumBackTestsModel.FK_account_portfolios_portfolios", "account_portfolios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account_portfolios>("MomentumBackTestsModel.FK_account_portfolios_portfolios", "account_portfolios", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_portfolio_positions_portfolios", "portfolio_positions")]
        public EntityCollection<portfolio_positions> portfolio_positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<portfolio_positions>("MomentumBackTestsModel.FK_portfolio_positions_portfolios", "portfolio_positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<portfolio_positions>("MomentumBackTestsModel.FK_portfolio_positions_portfolios", "portfolio_positions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="portfolio_positions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class portfolio_positions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new portfolio_positions object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="portfolio_id">Initial value of the portfolio_id property.</param>
        /// <param name="weight">Initial value of the weight property.</param>
        /// <param name="symbol">Initial value of the symbol property.</param>
        public static portfolio_positions Createportfolio_positions(global::System.Int32 id, global::System.Int32 portfolio_id, global::System.Decimal weight, global::System.String symbol)
        {
            portfolio_positions portfolio_positions = new portfolio_positions();
            portfolio_positions.id = id;
            portfolio_positions.portfolio_id = portfolio_id;
            portfolio_positions.weight = weight;
            portfolio_positions.symbol = symbol;
            return portfolio_positions;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 portfolio_id
        {
            get
            {
                return _portfolio_id;
            }
            set
            {
                Onportfolio_idChanging(value);
                ReportPropertyChanging("portfolio_id");
                _portfolio_id = StructuralObject.SetValidValue(value, "portfolio_id");
                ReportPropertyChanged("portfolio_id");
                Onportfolio_idChanged();
            }
        }
        private global::System.Int32 _portfolio_id;
        partial void Onportfolio_idChanging(global::System.Int32 value);
        partial void Onportfolio_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value, "weight");
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private global::System.Decimal _weight;
        partial void OnweightChanging(global::System.Decimal value);
        partial void OnweightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, false, "symbol");
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_portfolio_positions_portfolios", "model_portfolios")]
        public model_portfolios model_portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<model_portfolios>("MomentumBackTestsModel.FK_portfolio_positions_portfolios", "model_portfolios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<model_portfolios>("MomentumBackTestsModel.FK_portfolio_positions_portfolios", "model_portfolios").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<model_portfolios> model_portfoliosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<model_portfolios>("MomentumBackTestsModel.FK_portfolio_positions_portfolios", "model_portfolios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<model_portfolios>("MomentumBackTestsModel.FK_portfolio_positions_portfolios", "model_portfolios", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="position_status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class position_status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new position_status object.
        /// </summary>
        /// <param name="code">Initial value of the code property.</param>
        /// <param name="description">Initial value of the description property.</param>
        public static position_status Createposition_status(global::System.String code, global::System.String description)
        {
            position_status position_status = new position_status();
            position_status.code = code;
            position_status.description = description;
            return position_status;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                if (_code != value)
                {
                    OncodeChanging(value);
                    ReportPropertyChanging("code");
                    _code = StructuralObject.SetValidValue(value, false, "code");
                    ReportPropertyChanged("code");
                    OncodeChanged();
                }
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_account_positions_position_status", "account_positions")]
        public EntityCollection<account_positions> account_positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account_positions>("MomentumBackTestsModel.FK_account_positions_position_status", "account_positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account_positions>("MomentumBackTestsModel.FK_account_positions_position_status", "account_positions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="sessions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sessions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sessions object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="session_id">Initial value of the session_id property.</param>
        /// <param name="start_time">Initial value of the start_time property.</param>
        /// <param name="expiration_time">Initial value of the expiration_time property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static sessions Createsessions(global::System.Int64 id, global::System.Guid session_id, global::System.DateTime start_time, global::System.DateTime expiration_time, global::System.Int32 user_id)
        {
            sessions sessions = new sessions();
            sessions.id = id;
            sessions.session_id = session_id;
            sessions.start_time = start_time;
            sessions.expiration_time = expiration_time;
            sessions.user_id = user_id;
            return sessions;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid session_id
        {
            get
            {
                return _session_id;
            }
            set
            {
                Onsession_idChanging(value);
                ReportPropertyChanging("session_id");
                _session_id = StructuralObject.SetValidValue(value, "session_id");
                ReportPropertyChanged("session_id");
                Onsession_idChanged();
            }
        }
        private global::System.Guid _session_id;
        partial void Onsession_idChanging(global::System.Guid value);
        partial void Onsession_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime start_time
        {
            get
            {
                return _start_time;
            }
            set
            {
                Onstart_timeChanging(value);
                ReportPropertyChanging("start_time");
                _start_time = StructuralObject.SetValidValue(value, "start_time");
                ReportPropertyChanged("start_time");
                Onstart_timeChanged();
            }
        }
        private global::System.DateTime _start_time;
        partial void Onstart_timeChanging(global::System.DateTime value);
        partial void Onstart_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime expiration_time
        {
            get
            {
                return _expiration_time;
            }
            set
            {
                Onexpiration_timeChanging(value);
                ReportPropertyChanging("expiration_time");
                _expiration_time = StructuralObject.SetValidValue(value, "expiration_time");
                ReportPropertyChanged("expiration_time");
                Onexpiration_timeChanged();
            }
        }
        private global::System.DateTime _expiration_time;
        partial void Onexpiration_timeChanging(global::System.DateTime value);
        partial void Onexpiration_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> end_time
        {
            get
            {
                return _end_time;
            }
            set
            {
                Onend_timeChanging(value);
                ReportPropertyChanging("end_time");
                _end_time = StructuralObject.SetValidValue(value, "end_time");
                ReportPropertyChanged("end_time");
                Onend_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _end_time;
        partial void Onend_timeChanging(Nullable<global::System.DateTime> value);
        partial void Onend_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_sessions_users", "users")]
        public users users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<users>("MomentumBackTestsModel.FK_sessions_users", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<users>("MomentumBackTestsModel.FK_sessions_users", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<users> usersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<users>("MomentumBackTestsModel.FK_sessions_users", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<users>("MomentumBackTestsModel.FK_sessions_users", "users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="strategies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class strategies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new strategies object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="code">Initial value of the code property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static strategies Createstrategies(global::System.Int32 id, global::System.String code, global::System.String name)
        {
            strategies strategies = new strategies();
            strategies.id = id;
            strategies.code = code;
            strategies.name = name;
            return strategies;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                OncodeChanging(value);
                ReportPropertyChanging("code");
                _code = StructuralObject.SetValidValue(value, false, "code");
                ReportPropertyChanged("code");
                OncodeChanged();
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_accounts_strategies", "accounts")]
        public EntityCollection<accounts> accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<accounts>("MomentumBackTestsModel.FK_accounts_strategies", "accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<accounts>("MomentumBackTestsModel.FK_accounts_strategies", "accounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_balance_movements_strategies", "balance_movements")]
        public EntityCollection<balance_movements> balance_movements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<balance_movements>("MomentumBackTestsModel.FK_balance_movements_strategies", "balance_movements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<balance_movements>("MomentumBackTestsModel.FK_balance_movements_strategies", "balance_movements", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_expositions_strategies", "expositions")]
        public EntityCollection<expositions> expositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<expositions>("MomentumBackTestsModel.FK_expositions_strategies", "expositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<expositions>("MomentumBackTestsModel.FK_expositions_strategies", "expositions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_strategies_closing_prices_strategies", "strategies_closing_prices")]
        public EntityCollection<strategies_closing_prices> strategies_closing_prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<strategies_closing_prices>("MomentumBackTestsModel.FK_strategies_closing_prices_strategies", "strategies_closing_prices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<strategies_closing_prices>("MomentumBackTestsModel.FK_strategies_closing_prices_strategies", "strategies_closing_prices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_strategies_hourly_closing_prices_strategies", "strategies_hourly_closing_prices")]
        public EntityCollection<strategies_hourly_closing_prices> strategies_hourly_closing_prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<strategies_hourly_closing_prices>("MomentumBackTestsModel.FK_strategies_hourly_closing_prices_strategies", "strategies_hourly_closing_prices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<strategies_hourly_closing_prices>("MomentumBackTestsModel.FK_strategies_hourly_closing_prices_strategies", "strategies_hourly_closing_prices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="strategies_closing_prices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class strategies_closing_prices : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new strategies_closing_prices object.
        /// </summary>
        /// <param name="strategy_id">Initial value of the strategy_id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="net_ammount_usdt">Initial value of the net_ammount_usdt property.</param>
        /// <param name="net_ammount_btc">Initial value of the net_ammount_btc property.</param>
        /// <param name="price_per_share_usdt">Initial value of the price_per_share_usdt property.</param>
        public static strategies_closing_prices Createstrategies_closing_prices(global::System.Int32 strategy_id, global::System.DateTime date, global::System.Decimal net_ammount_usdt, global::System.Decimal net_ammount_btc, global::System.Decimal price_per_share_usdt)
        {
            strategies_closing_prices strategies_closing_prices = new strategies_closing_prices();
            strategies_closing_prices.strategy_id = strategy_id;
            strategies_closing_prices.date = date;
            strategies_closing_prices.net_ammount_usdt = net_ammount_usdt;
            strategies_closing_prices.net_ammount_btc = net_ammount_btc;
            strategies_closing_prices.price_per_share_usdt = price_per_share_usdt;
            return strategies_closing_prices;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 strategy_id
        {
            get
            {
                return _strategy_id;
            }
            set
            {
                if (_strategy_id != value)
                {
                    Onstrategy_idChanging(value);
                    ReportPropertyChanging("strategy_id");
                    _strategy_id = StructuralObject.SetValidValue(value, "strategy_id");
                    ReportPropertyChanged("strategy_id");
                    Onstrategy_idChanged();
                }
            }
        }
        private global::System.Int32 _strategy_id;
        partial void Onstrategy_idChanging(global::System.Int32 value);
        partial void Onstrategy_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                if (_date != value)
                {
                    OndateChanging(value);
                    ReportPropertyChanging("date");
                    _date = StructuralObject.SetValidValue(value, "date");
                    ReportPropertyChanged("date");
                    OndateChanged();
                }
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal net_ammount_usdt
        {
            get
            {
                return _net_ammount_usdt;
            }
            set
            {
                Onnet_ammount_usdtChanging(value);
                ReportPropertyChanging("net_ammount_usdt");
                _net_ammount_usdt = StructuralObject.SetValidValue(value, "net_ammount_usdt");
                ReportPropertyChanged("net_ammount_usdt");
                Onnet_ammount_usdtChanged();
            }
        }
        private global::System.Decimal _net_ammount_usdt;
        partial void Onnet_ammount_usdtChanging(global::System.Decimal value);
        partial void Onnet_ammount_usdtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal net_ammount_btc
        {
            get
            {
                return _net_ammount_btc;
            }
            set
            {
                Onnet_ammount_btcChanging(value);
                ReportPropertyChanging("net_ammount_btc");
                _net_ammount_btc = StructuralObject.SetValidValue(value, "net_ammount_btc");
                ReportPropertyChanged("net_ammount_btc");
                Onnet_ammount_btcChanged();
            }
        }
        private global::System.Decimal _net_ammount_btc;
        partial void Onnet_ammount_btcChanging(global::System.Decimal value);
        partial void Onnet_ammount_btcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price_per_share_usdt
        {
            get
            {
                return _price_per_share_usdt;
            }
            set
            {
                Onprice_per_share_usdtChanging(value);
                ReportPropertyChanging("price_per_share_usdt");
                _price_per_share_usdt = StructuralObject.SetValidValue(value, "price_per_share_usdt");
                ReportPropertyChanged("price_per_share_usdt");
                Onprice_per_share_usdtChanged();
            }
        }
        private global::System.Decimal _price_per_share_usdt;
        partial void Onprice_per_share_usdtChanging(global::System.Decimal value);
        partial void Onprice_per_share_usdtChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_strategies_closing_prices_strategies", "strategies")]
        public strategies strategies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_strategies_closing_prices_strategies", "strategies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_strategies_closing_prices_strategies", "strategies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<strategies> strategiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_strategies_closing_prices_strategies", "strategies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<strategies>("MomentumBackTestsModel.FK_strategies_closing_prices_strategies", "strategies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="strategies_hourly_closing_prices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class strategies_hourly_closing_prices : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new strategies_hourly_closing_prices object.
        /// </summary>
        /// <param name="strategy_id">Initial value of the strategy_id property.</param>
        /// <param name="datetime">Initial value of the datetime property.</param>
        /// <param name="net_ammount_usdt">Initial value of the net_ammount_usdt property.</param>
        /// <param name="net_ammount_btc">Initial value of the net_ammount_btc property.</param>
        /// <param name="price_per_share_usdt">Initial value of the price_per_share_usdt property.</param>
        public static strategies_hourly_closing_prices Createstrategies_hourly_closing_prices(global::System.Int32 strategy_id, global::System.DateTime datetime, global::System.Decimal net_ammount_usdt, global::System.Decimal net_ammount_btc, global::System.Decimal price_per_share_usdt)
        {
            strategies_hourly_closing_prices strategies_hourly_closing_prices = new strategies_hourly_closing_prices();
            strategies_hourly_closing_prices.strategy_id = strategy_id;
            strategies_hourly_closing_prices.datetime = datetime;
            strategies_hourly_closing_prices.net_ammount_usdt = net_ammount_usdt;
            strategies_hourly_closing_prices.net_ammount_btc = net_ammount_btc;
            strategies_hourly_closing_prices.price_per_share_usdt = price_per_share_usdt;
            return strategies_hourly_closing_prices;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 strategy_id
        {
            get
            {
                return _strategy_id;
            }
            set
            {
                if (_strategy_id != value)
                {
                    Onstrategy_idChanging(value);
                    ReportPropertyChanging("strategy_id");
                    _strategy_id = StructuralObject.SetValidValue(value, "strategy_id");
                    ReportPropertyChanged("strategy_id");
                    Onstrategy_idChanged();
                }
            }
        }
        private global::System.Int32 _strategy_id;
        partial void Onstrategy_idChanging(global::System.Int32 value);
        partial void Onstrategy_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime datetime
        {
            get
            {
                return _datetime;
            }
            set
            {
                if (_datetime != value)
                {
                    OndatetimeChanging(value);
                    ReportPropertyChanging("datetime");
                    _datetime = StructuralObject.SetValidValue(value, "datetime");
                    ReportPropertyChanged("datetime");
                    OndatetimeChanged();
                }
            }
        }
        private global::System.DateTime _datetime;
        partial void OndatetimeChanging(global::System.DateTime value);
        partial void OndatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal net_ammount_usdt
        {
            get
            {
                return _net_ammount_usdt;
            }
            set
            {
                Onnet_ammount_usdtChanging(value);
                ReportPropertyChanging("net_ammount_usdt");
                _net_ammount_usdt = StructuralObject.SetValidValue(value, "net_ammount_usdt");
                ReportPropertyChanged("net_ammount_usdt");
                Onnet_ammount_usdtChanged();
            }
        }
        private global::System.Decimal _net_ammount_usdt;
        partial void Onnet_ammount_usdtChanging(global::System.Decimal value);
        partial void Onnet_ammount_usdtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal net_ammount_btc
        {
            get
            {
                return _net_ammount_btc;
            }
            set
            {
                Onnet_ammount_btcChanging(value);
                ReportPropertyChanging("net_ammount_btc");
                _net_ammount_btc = StructuralObject.SetValidValue(value, "net_ammount_btc");
                ReportPropertyChanged("net_ammount_btc");
                Onnet_ammount_btcChanged();
            }
        }
        private global::System.Decimal _net_ammount_btc;
        partial void Onnet_ammount_btcChanging(global::System.Decimal value);
        partial void Onnet_ammount_btcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price_per_share_usdt
        {
            get
            {
                return _price_per_share_usdt;
            }
            set
            {
                Onprice_per_share_usdtChanging(value);
                ReportPropertyChanging("price_per_share_usdt");
                _price_per_share_usdt = StructuralObject.SetValidValue(value, "price_per_share_usdt");
                ReportPropertyChanged("price_per_share_usdt");
                Onprice_per_share_usdtChanged();
            }
        }
        private global::System.Decimal _price_per_share_usdt;
        partial void Onprice_per_share_usdtChanging(global::System.Decimal value);
        partial void Onprice_per_share_usdtChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_strategies_hourly_closing_prices_strategies", "strategies")]
        public strategies strategies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_strategies_hourly_closing_prices_strategies", "strategies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_strategies_hourly_closing_prices_strategies", "strategies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<strategies> strategiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<strategies>("MomentumBackTestsModel.FK_strategies_hourly_closing_prices_strategies", "strategies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<strategies>("MomentumBackTestsModel.FK_strategies_hourly_closing_prices_strategies", "strategies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new users object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="login">Initial value of the login property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="active">Initial value of the active property.</param>
        public static users Createusers(global::System.Int32 id, global::System.String name, global::System.String login, global::System.String password, global::System.Boolean active)
        {
            users users = new users();
            users.id = id;
            users.name = name;
            users.login = login;
            users.password = password;
            users.active = active;
            return users;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String login
        {
            get
            {
                return _login;
            }
            set
            {
                OnloginChanging(value);
                ReportPropertyChanging("login");
                _login = StructuralObject.SetValidValue(value, false, "login");
                ReportPropertyChanged("login");
                OnloginChanged();
            }
        }
        private global::System.String _login;
        partial void OnloginChanging(global::System.String value);
        partial void OnloginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value, "active");
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MomentumBackTestsModel", "FK_sessions_users", "sessions")]
        public EntityCollection<sessions> sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<sessions>("MomentumBackTestsModel.FK_sessions_users", "sessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<sessions>("MomentumBackTestsModel.FK_sessions_users", "sessions", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result object.
        /// </summary>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        public static QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result CreateQRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result(global::System.Int32 accountId)
        {
            QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result qRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result = new QRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result();
            qRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result.AccountId = accountId;
            return qRY_SCRN_ACCOUNTPOSITIONS_ENTITY_FULL_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, "AccountId");
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullDesc
        {
            get
            {
                return _FullDesc;
            }
            set
            {
                OnFullDescChanging(value);
                ReportPropertyChanging("FullDesc");
                _FullDesc = StructuralObject.SetValidValue(value, true, "FullDesc");
                ReportPropertyChanged("FullDesc");
                OnFullDescChanged();
            }
        }
        private global::System.String _FullDesc;
        partial void OnFullDescChanging(global::System.String value);
        partial void OnFullDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRows
        {
            get
            {
                return _TotalRows;
            }
            set
            {
                OnTotalRowsChanging(value);
                ReportPropertyChanging("TotalRows");
                _TotalRows = StructuralObject.SetValidValue(value, "TotalRows");
                ReportPropertyChanged("TotalRows");
                OnTotalRowsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRows;
        partial void OnTotalRowsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRowsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result object.
        /// </summary>
        /// <param name="positionId">Initial value of the PositionId property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result CreateQRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result(global::System.Int64 positionId, global::System.Int64 accountNumber, global::System.Int32 accountId, global::System.String symbol, global::System.String name, global::System.String status)
        {
            QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result qRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result = new QRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result();
            qRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result.PositionId = positionId;
            qRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result.AccountNumber = accountNumber;
            qRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result.AccountId = accountId;
            qRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result.Symbol = symbol;
            qRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result.Name = name;
            qRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result.Status = status;
            return qRY_SCRN_ACCOUNTPOSITIONS_GRID_MAIN_ALL_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PositionId
        {
            get
            {
                return _PositionId;
            }
            set
            {
                OnPositionIdChanging(value);
                ReportPropertyChanging("PositionId");
                _PositionId = StructuralObject.SetValidValue(value, "PositionId");
                ReportPropertyChanged("PositionId");
                OnPositionIdChanged();
            }
        }
        private global::System.Int64 _PositionId;
        partial void OnPositionIdChanging(global::System.Int64 value);
        partial void OnPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, "AccountNumber");
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.Int64 _AccountNumber;
        partial void OnAccountNumberChanging(global::System.Int64 value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, "AccountId");
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false, "Symbol");
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value, "Weight");
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Decimal> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Shares
        {
            get
            {
                return _Shares;
            }
            set
            {
                OnSharesChanging(value);
                ReportPropertyChanging("Shares");
                _Shares = StructuralObject.SetValidValue(value, "Shares");
                ReportPropertyChanged("Shares");
                OnSharesChanged();
            }
        }
        private Nullable<global::System.Int32> _Shares;
        partial void OnSharesChanging(Nullable<global::System.Int32> value);
        partial void OnSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRows
        {
            get
            {
                return _TotalRows;
            }
            set
            {
                OnTotalRowsChanging(value);
                ReportPropertyChanging("TotalRows");
                _TotalRows = StructuralObject.SetValidValue(value, "TotalRows");
                ReportPropertyChanged("TotalRows");
                OnTotalRowsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRows;
        partial void OnTotalRowsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRowsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result object.
        /// </summary>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="stockId">Initial value of the StockId property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result CreateQRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result(global::System.Int32 accountId, global::System.String stockId, global::System.String symbol)
        {
            QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result qRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result = new QRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result();
            qRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result.AccountId = accountId;
            qRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result.StockId = stockId;
            qRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result.Symbol = symbol;
            return qRY_SCRN_ACCOUNTPOSITIONS_WITH_POS_ENTITY_FULL_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, "AccountId");
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullDesc
        {
            get
            {
                return _FullDesc;
            }
            set
            {
                OnFullDescChanging(value);
                ReportPropertyChanging("FullDesc");
                _FullDesc = StructuralObject.SetValidValue(value, true, "FullDesc");
                ReportPropertyChanged("FullDesc");
                OnFullDescChanged();
            }
        }
        private global::System.String _FullDesc;
        partial void OnFullDescChanging(global::System.String value);
        partial void OnFullDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StockId
        {
            get
            {
                return _StockId;
            }
            set
            {
                OnStockIdChanging(value);
                ReportPropertyChanging("StockId");
                _StockId = StructuralObject.SetValidValue(value, false, "StockId");
                ReportPropertyChanged("StockId");
                OnStockIdChanged();
            }
        }
        private global::System.String _StockId;
        partial void OnStockIdChanging(global::System.String value);
        partial void OnStockIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false, "Symbol");
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StockDesc
        {
            get
            {
                return _StockDesc;
            }
            set
            {
                OnStockDescChanging(value);
                ReportPropertyChanging("StockDesc");
                _StockDesc = StructuralObject.SetValidValue(value, true, "StockDesc");
                ReportPropertyChanged("StockDesc");
                OnStockDescChanged();
            }
        }
        private global::System.String _StockDesc;
        partial void OnStockDescChanging(global::System.String value);
        partial void OnStockDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Shares
        {
            get
            {
                return _Shares;
            }
            set
            {
                OnSharesChanging(value);
                ReportPropertyChanging("Shares");
                _Shares = StructuralObject.SetValidValue(value, "Shares");
                ReportPropertyChanged("Shares");
                OnSharesChanged();
            }
        }
        private Nullable<global::System.Int32> _Shares;
        partial void OnSharesChanging(Nullable<global::System.Int32> value);
        partial void OnSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Ammount
        {
            get
            {
                return _Ammount;
            }
            set
            {
                OnAmmountChanging(value);
                ReportPropertyChanging("Ammount");
                _Ammount = StructuralObject.SetValidValue(value, "Ammount");
                ReportPropertyChanged("Ammount");
                OnAmmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Ammount;
        partial void OnAmmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRows
        {
            get
            {
                return _TotalRows;
            }
            set
            {
                OnTotalRowsChanging(value);
                ReportPropertyChanging("TotalRows");
                _TotalRows = StructuralObject.SetValidValue(value, "TotalRows");
                ReportPropertyChanged("TotalRows");
                OnTotalRowsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRows;
        partial void OnTotalRowsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRowsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="QRY_SCRN_ACCOUNTS_ENTITY_FULL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QRY_SCRN_ACCOUNTS_ENTITY_FULL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QRY_SCRN_ACCOUNTS_ENTITY_FULL_Result object.
        /// </summary>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="brokerId">Initial value of the BrokerId property.</param>
        public static QRY_SCRN_ACCOUNTS_ENTITY_FULL_Result CreateQRY_SCRN_ACCOUNTS_ENTITY_FULL_Result(global::System.Int32 customerId, global::System.Int64 accountNumber, global::System.Int32 brokerId)
        {
            QRY_SCRN_ACCOUNTS_ENTITY_FULL_Result qRY_SCRN_ACCOUNTS_ENTITY_FULL_Result = new QRY_SCRN_ACCOUNTS_ENTITY_FULL_Result();
            qRY_SCRN_ACCOUNTS_ENTITY_FULL_Result.CustomerId = customerId;
            qRY_SCRN_ACCOUNTS_ENTITY_FULL_Result.AccountNumber = accountNumber;
            qRY_SCRN_ACCOUNTS_ENTITY_FULL_Result.BrokerId = brokerId;
            return qRY_SCRN_ACCOUNTS_ENTITY_FULL_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, "AccountNumber");
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.Int64 _AccountNumber;
        partial void OnAccountNumberChanging(global::System.Int64 value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrokerId
        {
            get
            {
                return _BrokerId;
            }
            set
            {
                OnBrokerIdChanging(value);
                ReportPropertyChanging("BrokerId");
                _BrokerId = StructuralObject.SetValidValue(value, "BrokerId");
                ReportPropertyChanged("BrokerId");
                OnBrokerIdChanged();
            }
        }
        private global::System.Int32 _BrokerId;
        partial void OnBrokerIdChanging(global::System.Int32 value);
        partial void OnBrokerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IBAccount
        {
            get
            {
                return _IBAccount;
            }
            set
            {
                OnIBAccountChanging(value);
                ReportPropertyChanging("IBAccount");
                _IBAccount = StructuralObject.SetValidValue(value, true, "IBAccount");
                ReportPropertyChanged("IBAccount");
                OnIBAccountChanged();
            }
        }
        private global::System.String _IBAccount;
        partial void OnIBAccountChanging(global::System.String value);
        partial void OnIBAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IBURL
        {
            get
            {
                return _IBURL;
            }
            set
            {
                OnIBURLChanging(value);
                ReportPropertyChanging("IBURL");
                _IBURL = StructuralObject.SetValidValue(value, true, "IBURL");
                ReportPropertyChanged("IBURL");
                OnIBURLChanged();
            }
        }
        private global::System.String _IBURL;
        partial void OnIBURLChanging(global::System.String value);
        partial void OnIBURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> IBPort
        {
            get
            {
                return _IBPort;
            }
            set
            {
                OnIBPortChanging(value);
                ReportPropertyChanging("IBPort");
                _IBPort = StructuralObject.SetValidValue(value, "IBPort");
                ReportPropertyChanged("IBPort");
                OnIBPortChanged();
            }
        }
        private Nullable<global::System.Int64> _IBPort;
        partial void OnIBPortChanging(Nullable<global::System.Int64> value);
        partial void OnIBPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> IBBalance
        {
            get
            {
                return _IBBalance;
            }
            set
            {
                OnIBBalanceChanging(value);
                ReportPropertyChanging("IBBalance");
                _IBBalance = StructuralObject.SetValidValue(value, "IBBalance");
                ReportPropertyChanged("IBBalance");
                OnIBBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _IBBalance;
        partial void OnIBBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnIBBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRows
        {
            get
            {
                return _TotalRows;
            }
            set
            {
                OnTotalRowsChanging(value);
                ReportPropertyChanging("TotalRows");
                _TotalRows = StructuralObject.SetValidValue(value, "TotalRows");
                ReportPropertyChanged("TotalRows");
                OnTotalRowsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRows;
        partial void OnTotalRowsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRowsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result object.
        /// </summary>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="documentType">Initial value of the DocumentType property.</param>
        /// <param name="documentNumber">Initial value of the DocumentNumber property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="brokerName">Initial value of the BrokerName property.</param>
        public static QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result CreateQRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result(global::System.Int32 accountId, global::System.String firstName, global::System.String lastName, global::System.String documentType, global::System.Int64 documentNumber, global::System.Int64 accountNumber, global::System.String brokerName)
        {
            QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result = new QRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result();
            qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result.AccountId = accountId;
            qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result.FirstName = firstName;
            qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result.LastName = lastName;
            qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result.DocumentType = documentType;
            qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result.DocumentNumber = documentNumber;
            qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result.AccountNumber = accountNumber;
            qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result.BrokerName = brokerName;
            return qRY_SCRN_ACCOUNTS_GRID_MAIN_ALL_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, "AccountId");
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value, false, "DocumentType");
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private global::System.String _DocumentType;
        partial void OnDocumentTypeChanging(global::System.String value);
        partial void OnDocumentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DocumentNumber
        {
            get
            {
                return _DocumentNumber;
            }
            set
            {
                OnDocumentNumberChanging(value);
                ReportPropertyChanging("DocumentNumber");
                _DocumentNumber = StructuralObject.SetValidValue(value, "DocumentNumber");
                ReportPropertyChanged("DocumentNumber");
                OnDocumentNumberChanged();
            }
        }
        private global::System.Int64 _DocumentNumber;
        partial void OnDocumentNumberChanging(global::System.Int64 value);
        partial void OnDocumentNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, "AccountNumber");
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.Int64 _AccountNumber;
        partial void OnAccountNumberChanging(global::System.Int64 value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrokerName
        {
            get
            {
                return _BrokerName;
            }
            set
            {
                OnBrokerNameChanging(value);
                ReportPropertyChanging("BrokerName");
                _BrokerName = StructuralObject.SetValidValue(value, false, "BrokerName");
                ReportPropertyChanged("BrokerName");
                OnBrokerNameChanged();
            }
        }
        private global::System.String _BrokerName;
        partial void OnBrokerNameChanging(global::System.String value);
        partial void OnBrokerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRows
        {
            get
            {
                return _TotalRows;
            }
            set
            {
                OnTotalRowsChanging(value);
                ReportPropertyChanging("TotalRows");
                _TotalRows = StructuralObject.SetValidValue(value, "TotalRows");
                ReportPropertyChanged("TotalRows");
                OnTotalRowsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRows;
        partial void OnTotalRowsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRowsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="QRY_SCRN_CUSTOMERS_ENTITY_FULL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QRY_SCRN_CUSTOMERS_ENTITY_FULL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QRY_SCRN_CUSTOMERS_ENTITY_FULL_Result object.
        /// </summary>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="documentType">Initial value of the DocumentType property.</param>
        /// <param name="documentNumber">Initial value of the DocumentNumber property.</param>
        public static QRY_SCRN_CUSTOMERS_ENTITY_FULL_Result CreateQRY_SCRN_CUSTOMERS_ENTITY_FULL_Result(global::System.String firstName, global::System.String lastName, global::System.String documentType, global::System.Int64 documentNumber)
        {
            QRY_SCRN_CUSTOMERS_ENTITY_FULL_Result qRY_SCRN_CUSTOMERS_ENTITY_FULL_Result = new QRY_SCRN_CUSTOMERS_ENTITY_FULL_Result();
            qRY_SCRN_CUSTOMERS_ENTITY_FULL_Result.FirstName = firstName;
            qRY_SCRN_CUSTOMERS_ENTITY_FULL_Result.LastName = lastName;
            qRY_SCRN_CUSTOMERS_ENTITY_FULL_Result.DocumentType = documentType;
            qRY_SCRN_CUSTOMERS_ENTITY_FULL_Result.DocumentNumber = documentNumber;
            return qRY_SCRN_CUSTOMERS_ENTITY_FULL_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value, false, "DocumentType");
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private global::System.String _DocumentType;
        partial void OnDocumentTypeChanging(global::System.String value);
        partial void OnDocumentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DocumentNumber
        {
            get
            {
                return _DocumentNumber;
            }
            set
            {
                OnDocumentNumberChanging(value);
                ReportPropertyChanging("DocumentNumber");
                _DocumentNumber = StructuralObject.SetValidValue(value, "DocumentNumber");
                ReportPropertyChanged("DocumentNumber");
                OnDocumentNumberChanged();
            }
        }
        private global::System.Int64 _DocumentNumber;
        partial void OnDocumentNumberChanging(global::System.Int64 value);
        partial void OnDocumentNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true, "Sex");
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, true, "Contact");
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true, "EMail");
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRows
        {
            get
            {
                return _TotalRows;
            }
            set
            {
                OnTotalRowsChanging(value);
                ReportPropertyChanging("TotalRows");
                _TotalRows = StructuralObject.SetValidValue(value, "TotalRows");
                ReportPropertyChanged("TotalRows");
                OnTotalRowsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRows;
        partial void OnTotalRowsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRowsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result object.
        /// </summary>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="documentType">Initial value of the DocumentType property.</param>
        /// <param name="documentNumber">Initial value of the DocumentNumber property.</param>
        /// <param name="sex">Initial value of the Sex property.</param>
        public static QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result CreateQRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result(global::System.String firstName, global::System.String lastName, global::System.String documentType, global::System.Int64 documentNumber, global::System.String sex)
        {
            QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result qRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result = new QRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result();
            qRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result.FirstName = firstName;
            qRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result.LastName = lastName;
            qRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result.DocumentType = documentType;
            qRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result.DocumentNumber = documentNumber;
            qRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result.Sex = sex;
            return qRY_SCRN_CUSTOMERS_GRID_MAIN_ALL_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value, false, "DocumentType");
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private global::System.String _DocumentType;
        partial void OnDocumentTypeChanging(global::System.String value);
        partial void OnDocumentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DocumentNumber
        {
            get
            {
                return _DocumentNumber;
            }
            set
            {
                OnDocumentNumberChanging(value);
                ReportPropertyChanging("DocumentNumber");
                _DocumentNumber = StructuralObject.SetValidValue(value, "DocumentNumber");
                ReportPropertyChanged("DocumentNumber");
                OnDocumentNumberChanged();
            }
        }
        private global::System.Int64 _DocumentNumber;
        partial void OnDocumentNumberChanging(global::System.Int64 value);
        partial void OnDocumentNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, false, "Sex");
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, true, "Contact");
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true, "EMail");
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRows
        {
            get
            {
                return _TotalRows;
            }
            set
            {
                OnTotalRowsChanging(value);
                ReportPropertyChanging("TotalRows");
                _TotalRows = StructuralObject.SetValidValue(value, "TotalRows");
                ReportPropertyChanged("TotalRows");
                OnTotalRowsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRows;
        partial void OnTotalRowsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRowsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MomentumBackTestsModel", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true, "Database");
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, "ID");
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true, "Owner");
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value, "OwnerID");
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }

    #endregion

}
